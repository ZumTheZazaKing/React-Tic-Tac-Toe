{"version":3,"sources":["Navbar.js","Ingame.js","Endgame.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","id","wins","defeats","Ingame","winningConditions","handleClick","e","turn","target","innerHTML","setPlayerFills","playerFills","setTurn","ingame","document","querySelector","cells","querySelectorAll","strike","indexPicker","Math","floor","random","length","console","log","endgameRef","current","className","setEndgameMessage","forEach","winningCondition","includes","winningCell","style","color","setWins","parseInt","localStorage","setItem","computerAction","setTimeout","setComputerFills","computerFills","clearTimeout","setDefeats","onClick","ref","cellOneRef","cellTwoRef","cellThreeRef","cellFourRef","cellFiveRef","cellSixRef","cellSevenRef","cellEightRef","cellNineRef","Endgame","endgameMessage","playAgain","App","useState","getItem","useRef","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e9c539c5.chunk.js","sourcesContent":["export function Navbar(props){\n    return (<div id=\"navbar\">\n        <p>Wins: {props.wins}</p>\n        <p>Defeats: {props.defeats}</p>\n    </div>)\n}","export function Ingame(props){\n\n    const winningConditions = [\n        [\"topLeft\",\"top\",\"topRight\"],\n        [\"left\",\"middle\",\"right\"],\n        [\"bottomLeft\",\"bottom\",\"bottomRight\"],\n        [\"topLeft\",\"left\",\"bottomLeft\"],\n        [\"top\",\"middle\",\"bottom\"],\n        [\"topRight\",\"right\",\"bottomRight\"],\n        [\"topLeft\",\"middle\",\"bottomRight\"],\n        [\"topRight\",\"middle\",\"bottomLeft\"]\n    ]\n\n\n    const handleClick = e => {\n        if(props.turn !== \"Your Turn\"){\n            return;\n        } else {\n\n            if(e.target.innerHTML !== \"\")return;\n\n            e.target.innerHTML = \"X\";\n            props.setPlayerFills([...props.playerFills, e.target.id]);\n\n            \n\n            props.setTurn(\"Computer's Turn\");\n\n            const ingame = document.querySelector(\"#ingame\");\n            const cells = ingame.querySelectorAll(\"div\");\n\n            let strike = 0;\n\n            let indexPicker = Math.floor(Math.random()*cells.length);\n            if(indexPicker === 0){indexPicker++}\n\n            while(cells[indexPicker].innerHTML !== \"\"){\n                console.log(strike);\n                indexPicker = Math.floor(Math.random()*cells.length);\n                if(indexPicker === 0){indexPicker++}\n                strike++;\n                if(strike === 9){\n                    props.endgameRef.current.className = \"\";\n                    props.setEndgameMessage(\"DRAW\");\n                    props.setTurn(\"GAME END\");\n                    winningConditions.forEach(winningCondition => {\n                        if([...props.playerFills, e.target.id].includes(winningCondition[0])){\n                            if([...props.playerFills, e.target.id].includes(winningCondition[1])){\n                                if([...props.playerFills, e.target.id].includes(winningCondition[2])){\n                                    console.log(\"You win\");\n                                    winningCondition.forEach(winningCell => {\n                                        ingame.querySelector(`#${winningCell}`).style.color = \"green\";\n                                    })\n                                    props.endgameRef.current.className = \"\";\n                                    props.setEndgameMessage(\"VICTORY\")\n                                    props.setTurn(\"GAME END\");\n                                    props.setWins(parseInt(props.wins) + 1);\n                                    localStorage.setItem(\"zum_tic_tac_toe_wins\", parseInt(props.wins) + 1)\n                                }\n                            }\n                        }\n                    })\n                    return;\n                }\n            }\n\n            const computerAction = setTimeout(() => {\n                props.setTurn(\"Your Turn\");\n                cells[indexPicker].innerHTML = \"O\";\n                props.setComputerFills([...props.computerFills, cells[indexPicker].id])\n            },1000)\n\n            winningConditions.forEach(winningCondition => {\n                if([...props.playerFills, e.target.id].includes(winningCondition[0])){\n                    if([...props.playerFills, e.target.id].includes(winningCondition[1])){\n                        if([...props.playerFills, e.target.id].includes(winningCondition[2])){\n                            console.log(\"You win\");\n                            winningCondition.forEach(winningCell => {\n                                ingame.querySelector(`#${winningCell}`).style.color = \"green\";\n                            })\n                            props.endgameRef.current.className = \"\";\n                            props.setEndgameMessage(\"VICTORY\")\n                            props.setTurn(\"GAME END\");\n                            props.setWins(parseInt(props.wins) + 1);\n                            localStorage.setItem(\"zum_tic_tac_toe_wins\", parseInt(props.wins) + 1)\n                            clearTimeout(computerAction);\n                        }\n                    }\n                }\n                else if ([...props.computerFills, cells[indexPicker].id].includes(winningCondition[0])){\n                    if([...props.computerFills, cells[indexPicker].id].includes(winningCondition[1])){\n                        if([...props.computerFills, cells[indexPicker].id].includes(winningCondition[2])){\n                            if(props.turn !== \"GAME END\" && props.endgameRef.current.className === \"hide\"){\n                                console.log(\"You lose\");\n                                setTimeout(() => {\n                                    props.endgameRef.current.className = \"\";\n                                    winningCondition.forEach(winningCell => {\n                                        ingame.querySelector(`#${winningCell}`).style.color = \"crimson\";\n                                    })\n                                    props.setEndgameMessage(\"DEFEAT\");\n                                    props.setTurn(\"GAME END\")\n                                    props.setDefeats(parseInt(props.defeats) + 1);\n                                    localStorage.setItem(\"zum_tic_tac_toe_defeats\", parseInt(props.defeats) + 1);\n                                    clearTimeout(computerAction);\n                                },1100)\n                            }\n                        }\n                    }\n                }\n            })\n\n        }\n\n    }\n    \n\n    return (<div id=\"ingame\">\n        <p>{props.turn}</p>\n\n        <div id=\"cells\">\n            <div onClick={e => handleClick(e)} id=\"topLeft\" ref={props.cellOneRef}></div>\n            <div onClick={e => handleClick(e)} id=\"top\" ref={props.cellTwoRef}></div>\n            <div onClick={e => handleClick(e)} id=\"topRight\" ref={props.cellThreeRef}></div>\n            <div onClick={e => handleClick(e)} id=\"left\" ref={props.cellFourRef}></div>\n            <div onClick={e => handleClick(e)} id=\"middle\" ref={props.cellFiveRef}></div>\n            <div onClick={e => handleClick(e)} id=\"right\" ref={props.cellSixRef}></div>\n            <div onClick={e => handleClick(e)} id=\"bottomLeft\" ref={props.cellSevenRef}></div>\n            <div onClick={e => handleClick(e)} id=\"bottom\" ref={props.cellEightRef}></div>\n            <div onClick={e => handleClick(e)} id=\"bottomRight\" ref={props.cellNineRef}></div>\n        </div>\n    </div>)\n}","export function Endgame(props){\n    return (<div id=\"endgame\" className=\"hide\" ref={props.endgameRef}>\n        <p>{props.endgameMessage}</p>\n        <button onClick={e => props.playAgain(e)}>PLAY AGAIN</button>\n    </div>)\n}","import { useState, useRef } from 'react';\n\nimport './App.css';\nimport { Navbar } from './Navbar';\nimport { Ingame } from './Ingame';\nimport { Endgame } from './Endgame';\n\nfunction App() {\n\n  let [turn, setTurn] = useState(\"Your Turn\");\n  let [wins, setWins] = useState(localStorage.getItem(\"zum_tic_tac_toe_wins\") || 0);\n  let [defeats, setDefeats] = useState(localStorage.getItem(\"zum_tic_tac_toe_defeats\") || 0);\n  let [endgameMessage, setEndgameMessage] = useState(\"\");\n\n  let [playerFills, setPlayerFills] = useState([]);\n    let [computerFills, setComputerFills] = useState([]);\n\n  let cellOneRef = useRef();\n  let cellTwoRef = useRef();\n  let cellThreeRef = useRef();\n  let cellFourRef = useRef();\n  let cellFiveRef = useRef();\n  let cellSixRef = useRef();\n  let cellSevenRef = useRef();\n  let cellEightRef = useRef();\n  let cellNineRef = useRef();\n\n  let endgameRef= useRef();\n\n  function playAgain(){\n    cellOneRef.current.innerHTML = \"\";cellOneRef.current.style.color = \"black\";\n    cellTwoRef.current.innerHTML = \"\";cellTwoRef.current.style.color = \"black\";\n    cellThreeRef.current.innerHTML = \"\";cellThreeRef.current.style.color = \"black\";\n    cellFourRef.current.innerHTML = \"\";cellFourRef.current.style.color = \"black\";\n    cellFiveRef.current.innerHTML = \"\";cellFiveRef.current.style.color = \"black\";\n    cellSixRef.current.innerHTML = \"\";cellSixRef.current.style.color = \"black\";\n    cellSevenRef.current.innerHTML = \"\";cellSevenRef.current.style.color = \"black\";\n    cellEightRef.current.innerHTML = \"\";cellEightRef.current.style.color = \"black\";\n    cellNineRef.current.innerHTML = \"\";cellNineRef.current.style.color = \"black\";\n    setTurn(\"Your Turn\");\n    setEndgameMessage(\"\");\n    endgameRef.current.className = \"hide\";\n    setPlayerFills([]);\n    setComputerFills([]);\n  }\n\n  return (\n    <div className=\"App\">\n      <Navbar\n      wins={wins}\n      defeats={defeats}\n      />\n      <Ingame\n      turn={turn}\n      setTurn={setTurn}\n      wins={wins}\n      setWins={setWins}\n      defeats={defeats}\n      setDefeats={setDefeats}\n      setEndgameMessage={setEndgameMessage}\n      endgameRef={endgameRef}\n      playerFills={playerFills}\n      setPlayerFills={setPlayerFills}\n      computerFills={computerFills}\n      setComputerFills={setComputerFills}\n      cellOneRef={cellOneRef}\n      cellTwoRef={cellTwoRef}\n      cellThreeRef={cellThreeRef}\n      cellFourRef={cellFourRef}\n      cellFiveRef={cellFiveRef}\n      cellSixRef={cellSixRef}\n      cellSevenRef={cellSevenRef}\n      cellEightRef={cellEightRef}\n      cellNineRef={cellNineRef}\n      />\n      <Endgame\n      endgameMessage={endgameMessage}\n      endgameRef={endgameRef}\n      playAgain={playAgain}\n      />\n    </div>\n  );\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}